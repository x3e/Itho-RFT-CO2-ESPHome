substitutions:
  devicename: ithofan
  upper_devicename: "Itho Fan"

esphome:
  name: ${devicename}
  platform: ESP8266
  board: nodemcuv2
  includes:
    - ithofanComponent/
  libraries:
    - EspSoftwareSerial
    - SPI

#auto fan = new IthoFan(<radio Io0 pin>, <first byte>, <fan address>, <remote address>);
custom_component:
- id: fan
  lambda: |-
    auto fan = new IthoFan(5, 0x1C, 0x49EE9C, 0x96599B);
    return {fan};

text_sensor:
  - platform: template
    name: "${upper_devicename}"
    id: fan_state
    icon: mdi:fan

button:
  - platform: template
    name: "${upper_devicename} auto"
    id: switch_auto
    icon: mdi:molecule-co2
    on_press:
      - lambda: fanPtr->setStatus(FanStatus::automatic);
  - platform: template
    name: "${upper_devicename} night"
    id: switch_night
    icon: mdi:weather-night
    on_press:
      - lambda: fanPtr->setStatus(FanStatus::night);
  - platform: template
    name: "${upper_devicename} low"
    id: switch_low
    icon: mdi:fan-speed-1
    on_press:
      - lambda: fanPtr->setStatus(FanStatus::low);
  - platform: template
    name: "${upper_devicename} medium"
    id: switch_medium
    icon: mdi:fan-speed-2
    on_press:
      - lambda: fanPtr->setStatus(FanStatus::medium);
  - platform: template
    name: "${upper_devicename} high"
    id: switch_high
    icon: mdi:fan-speed-3
    on_press:
      - lambda: fanPtr->setStatus(FanStatus::high);

number:
  - platform: template
    name: "${upper_devicename} timer"
    id: timer_number
    icon: mdi:av-timer
    min_value: 0
    max_value: 255
    step: 1
    set_action:
      - lambda: fanPtr->setTimer(x);

sensor:
  - platform: template
    name: "${upper_devicename} co2"
    id: co2_sensor
    icon: mdi:molecule-co2
    unit_of_measurement: "ppm"
    accuracy_decimals: 0
  - platform: template
    name: "${upper_devicename} exhaust temperature"
    id: exhausttemp_sensor
    icon: mdi:temperature-celsius
    unit_of_measurement: "째C"
    accuracy_decimals: 2
  - platform: template
    name: "${upper_devicename} supply temperature"
    id: supplytemp_sensor
    icon: mdi:temperature-celsius
    unit_of_measurement: "째C"
    accuracy_decimals: 2
  - platform: template
    name: "${upper_devicename} indoor temperature"
    id: indoortemp_sensor
    icon: mdi:temperature-celsius
    unit_of_measurement: "째C"
    accuracy_decimals: 2
  - platform: template
    name: "${upper_devicename} outdoor temperature"
    id: outdoortemp_sensor
    icon: mdi:temperature-celsius
    unit_of_measurement: "째C"
    accuracy_decimals: 2
  - platform: template
    name: "${upper_devicename} inlet flow"
    id: inletflow_sensor
    icon: mdi:weather-windy
    unit_of_measurement: "l/s"
    accuracy_decimals: 2
  - platform: template
    name: "${upper_devicename} exhaust flow"
    id: exhaustflow_sensor
    icon: mdi:weather-windy
    unit_of_measurement: "l/s"
    accuracy_decimals: 2

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret api_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${upper_devicename} Hotspot"
    password: !secret ap_password

captive_portal:
